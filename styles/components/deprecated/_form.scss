$form-with-border: true !default;
$form-field-selector: '.form-field' !default;
$form-field-with-errors: '.with-errors' !default;
$form-field-error-selector: '.error' !default;
$form-select-selector: '.form-select' !default;
$form-multi-select-selector: '.form-multi-select' !default;
$form-submission-action-selector: '.action' !default;
$form-submission-action-active: '.active' !default;
$form-submission-action-confirmation-selector: '.confirmation' !default;
$form-confirm-border-color: transparentize(color(white), .65) !default;
$form-input-background: linear-gradient(to top, transparent, rgba(color(black), .03)) !default;
$form-input-background-color: color(white) !default;
$form-input-border-color: darken(color(white), 10%) !default;
$form-input-border-color-focused: color(border, dark) !default;
$form-input-disabled-bg: rgba(255, 255, 255, 0) !default;
$form-input-height: 32px !default;
$form-input-padding: 'calc(#{$form-input-height} - #{font(size, base)})' !default;
$form-input-half-padding: 'calc((#{$form-input-height} - #{font(size, base)}) / 2)' !default;
$form-input-shadow-color: rgba(color(black), .08) !default;
$form-input-text-color: color(text, small) !default;
$form-input-disabled-text-color: lighten($form-input-text-color, 20%) !default;
$form-label-height: $form-input-height;
$form-select-arrow-size: 4px !default;
$form-select-background: linear-gradient(to bottom, transparent, rgba(color(black), .03)) !default;
$form-multi-select-icon-color: color(text, small) !default;
$form-multi-select-icon-size: 14px !default;
$form-multi-select-option-color: $form-input-text-color !default;
$form-multi-select-item-border: 0 !default;
$form-multi-select-item-background: color(gray, jet) !default;
$form-multi-select-item-color: color(white) !default;
$form-multi-select-option-focused-background: color(border, light) !default;
$form-multi-select-option-focused-color: color(text) !default;
$form-multi-select-dropdown-icon: plus !default;
$form-multi-select-options-max-height: 200px !default;

$form-multi-checkbox-option-checked-background: color(info, light);
$form-multi-checkbox-option-checked-color: color(info, dark);

$include-html-paint-form: true !default;

@mixin form($with-border: $form-with-border) {
  @extend %grid-column-12;

  padding: 0 !important;

  @if $with-border {
    background-color: color(border, light);
    border: solid 1px color(border);
    border-radius: border(radius);
  }
}

@mixin form-fieldset($with-border: $form-with-border) {
  border: 0;
  margin-bottom: 0;

  @if $with-border {
    padding: $column-gutter / 2 $column-gutter 0;
  } @else {
    padding: 0;
  }

  &:not(:last-of-type) {
    border-bottom: 1px solid color(border);
  }

  legend {
    display: none;
  }
}

@mixin form-field() {
  min-height: $form-input-height * 2.5;

  &#{$form-field-with-errors} {
    #{$form-field-error-selector} {
      color: color(alert);
      font-size: font(size, small);
      line-height: $form-input-height / 2;
      padding-left: $column-gutter / 2;
    }

    input,
    textarea,
    &#{$form-select-selector} > div {
      border-color: color(alert, light);
      transition: border-color animation(transition, duration) / 2 linear;
    }
  }
}

@mixin form-label() {
  display: block;
  font-size: font(heading, h5);
  font-weight: font(weight, bold);
  line-height: $form-label-height;
  min-height: $form-label-height;
}

@mixin form-input() {
  @include form-input-shared-properties;

  font-size: font(size, base);
  line-height: $form-input-height;
  height: $form-input-height;
  margin-bottom: 0;
  padding: 0 $form-input-half-padding;
  width: 100%;

  &::-webkit-input-placeholder {
    color: lighten($form-input-text-color, 20%);
  }
}

@mixin form-checkbox($inner-wrapper: '.content', $float: left, $inline: false) {
  @if ($inner-wrapper == null) {
    $inner-wrapper: '&';
  }

  $label-margin-direction: right;

  @if ($float == left) {
    $label-margin-direction: left;
  }

  @if $inline {
    width: auto !important;
  }

  min-height: $form-input-height;

  label,
  #{$inner-wrapper} {
    display: inline-block;
    line-height: $form-input-height;
  }

  label {
    margin-#{$label-margin-direction}: $column-gutter / 2;
  }

  #{$inner-wrapper} {
    float: $float;
  }
}

@mixin form-select($inner-wrapper: '.content', $inline: false) {
  @if ($inner-wrapper == null) {
    $inner-wrapper: '&';
  }

  #{$inner-wrapper} {
    @include form-input-shared-properties;
    @include form-select-arrow;

    background: color(white);
    background-image: $form-select-background !important;
    height: $form-input-height;
    line-height: $form-input-height;
    overflow: hidden;
    position: relative;

    @if $inline {
      float: left;
      padding-right: $column-gutter;
    }

    select {
      -webkit-appearance: none;
      background: rgba(color(black), 0);
      border: 0;
      border-radius: border(radius);
      color: $form-input-text-color;
      font-size: font(size, base);
      margin: 0;
      padding: 0 $form-input-half-padding;
      position: relative;
      text-shadow: 0 1px color(white);
      width: 130%;

      &:focus {
        color: color(link);
        outline: none;
        z-index: z();
      }

      > option {
        background: color(gray, silver);
        border-radius: border(radius);
        cursor: pointer;
        margin: 3px;
        padding: 3px 8px;
        text-shadow: none;
      }
    }
  }

  &.disabled,
  &.disabled #{$inner-wrapper} {
    &,
    select {
      @include form-input-disabled;
    }
  }
}

@mixin form-multi-select-item-label($item-height) {
  line-height: $item-height;
  padding: 0 $form-multi-select-icon-size;
  text-shadow: none;
  transition: padding .125s ease;
}

@mixin form-multi-select-item($item, $label, $icon) {
  $item-height: $form-multi-select-icon-size * 2;

  #{$item} {
    background-color: $form-multi-select-item-background;
    border: $form-multi-select-item-border;
    border-radius: border(radius);
    color: $form-multi-select-item-color;
    float: left;
    font-size: font(size, small);
    margin: $column-gutter / 5 $column-gutter / 5 $column-gutter / 5 0;
    position: relative;

    &:first-child {
      margin-left: - $column-gutter / 5;
    }

    @if $label == false {
      @include form-multi-select-item-label($item-height);
    } @else {
      &:hover {
        #{$label} {
          padding: 0 $form-multi-select-icon-size * 1.5 0 $form-multi-select-icon-size / 2;
        }

        #{$icon} {
          display: block;
        }
      }

      #{$label},
      #{$icon} {
        vertical-align: middle;
      }

      #{$label} {
        @include form-multi-select-item-label($item-height);

        display: block;
      }

      #{$icon} {
        cursor: pointer;
        display: none;
        height: $item-height;
        line-height: $item-height;
        position: absolute;
        right: -$form-multi-select-icon-size * 1000;
        transition: color 300ms ease-in;
        width: $form-multi-select-icon-size;

        &:hover {
          color: color(alert);
        }

        &::before {
          @include icon(cross, $set: paint);

          font-size: font(size, small);
          left: -$form-multi-select-icon-size * 1000;
          line-height: $item-height;
          position: absolute;
        }
      }
    }
  }
}

@mixin form-multi-select-input() {
  > input {
    -webkit-appearance: none;
    background: none !important;
    border: 0 !important;
    box-shadow: none !important;
    cursor: default;
    display: inline-block;
    font-family: inherit;
    line-height: $form-input-height;
    margin: 0;
    outline: none;
    padding: 0 !important;
    width: 100%;
  }
}

@mixin form-multi-select-input-selector($selector: false) {
  @if $selector {
    #{$selector} {
      @include form-multi-select-input;

      display: block;
      width: auto;
    }
  } @else {
    @include form-multi-select-input;
  }
}

@mixin form-multi-select-options($options, $option, $is-focused-selector) {
  background-color: color(white);
  border-radius: 0 0 border(radius) border(radius);
  border: 1px solid $form-input-border-color;
  box-shadow: 0 1px 0 rgba(0, 0, 0, .06);
  box-sizing: border-box;
  display: none;
  margin-bottom: $column-gutter / 2;
  margin-top: -1px;
  max-height: $form-multi-select-options-max-height;
  min-width: 100%;
  -webkit-overflow-scrolling: touch;
  overflow-x: hidden;
  overflow-y: auto;
  position: absolute;
  top: 100%;
  z-index: z();

  #{$options} {
    margin: 0;
    padding: 0;
    padding-right: 20%;
    width: 120%;
  }

  #{$option} {
    border-bottom: 1px solid $form-input-border-color;
    box-sizing: border-box;
    color: $form-multi-select-option-color;
    cursor: pointer;
    display: block;
    font-size: font(size, small);
    padding: $column-gutter / 4 $column-gutter / 2;

    &:last-child {
      border-bottom: 0;
      border-radius: 0 0 border(radius) border(radius);
    }

    &#{$is-focused-selector},
    &:hover {
      background-color: $form-multi-select-option-focused-background;
      color: $form-multi-select-option-focused-color;
      transition: background .125s ease;
    }

    &#{$is-focused-selector}::last-child {
      margin-bottom: -1px;
    }
  }
}

@mixin form-multi-select(
  $control: '.control',
  $item: '.item',
  $item-label: '.label',
  $item-icon: '.icon',
  $input-selector: false,
  $add-selector: '.add',
  $clear-all-selector: false,
  $options-selector: '.options-selector',
  $options: '.options',
  $option: '.option',
  $is-open-selector: '.is-open',
  $has-items-selector: '.has-value',
  $is-focused-selector: '.is-focused'
) {
  position: relative;

  &#{$is-open-selector} > #{$control},
  #{$is-open-selector}#{$control} {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border-color: $form-input-border-color-focused;
  }

  &#{$is-open-selector} > #{$options-selector},
  #{$is-open-selector} + #{$options-selector} {
    display: block;
  }

  &#{$is-focused-selector} > #{$control},
  &#{$is-focused-selector} > #{$options-selector},
  #{$is-focused-selector}#{$control},
  #{$is-focused-selector} + #{$options-selector} {
    border-color: $form-input-border-color-focused;
  }

  &#{$has-items-selector} > #{$control},
  #{$has-items-selector}#{$control} {
    > .loading {
      right: $column-gutter;
    }

    #{$input-selector} input,
    > input {
      width: auto;
    }
  }

  &#{$is-open-selector} #{$input-selector} {
    display: block;
    width: 100%;
  }

  #{$control} {
    @include form-input;
    @include form-multi-select-input-selector($selector: $input-selector);
    @include form-multi-select-item(
      $item: $item,
      $label: $item-label,
      $icon: $item-icon
    );

    background-color: $form-input-background-color;
    position: relative;
  }

  #{$add-selector},
  #{$clear-all-selector} {
    color: $form-multi-select-icon-color;
    cursor: pointer;
    height: $form-input-height;
    line-height: $form-input-height;
    overflow: hidden;
    position: absolute;
    text-align: right;
    text-shadow: none;
    top: 0;
    width: $form-input-height;
  }

  #{$clear-all-selector} {
    @include icon(delete, null, $set: paint);

    margin: $column-gutter / 4
      $column-gutter / 6
      $column-gutter / 4
      $column-gutter / 4;
    right: $form-multi-select-icon-size;

    &:hover {
      color: color(alert, light);
    }
  }

  #{$add-selector} {
    @include icon(circle-plus, null, $set: paint);

    margin: $column-gutter / 4  0;
    right: 0;

    &:hover {
      color: color(info);
    }
  }

  #{$options-selector} {
    @include form-multi-select-options(
      $options: $options,
      $option: $option,
      $is-focused-selector: $is-focused-selector
    );
  }

  .loading {
    animation: spin 400ms infinite linear;
    border: 2px solid color(gray, iron);
    border-radius: 50%;
    border-right-color: color(gray, oil);
    box-sizing: border-box;
    display: inline-block;
    height: $form-multi-select-icon-size;
    margin-top: -$form-multi-select-icon-size / 2;
    position: relative;
    right: $column-gutter;
    top: 50%;
    width: $form-multi-select-icon-size;
  }
}

@mixin form-multi-checkbox-icon($icon) {
  &::before {
    @include icon($icon, null, $set: paint);

    float: right;
    font-size: font(size, small);
    line-height: $form-input-height !important;
  }
}

@mixin form-multi-checkbox-option(
  $is-checked-selector: $is-checked-selector,
  $option-whitespace: normal
) {
  white-space: $option-whitespace;

  &::before {
    @include icon(square-empty, null, paint);

    color: color(text, small);
    margin-right: $column-gutter / 4;
  }

  &#{$is-checked-selector} {
    background-color: $form-multi-checkbox-option-checked-background;
    color: $form-multi-checkbox-option-checked-color;

    &::before {
      @include icon(square-check, null, paint);

      color: $form-multi-checkbox-option-checked-color;
    }
  }
}

@mixin form-multi-checkbox-options(
  $options: $options,
  $option: $option,
  $option-whitespace: $option-whitespace,
  $is-focused-selector: $is-focused-selector,
  $is-checked-selector: $is-checked-selector
) {
  @include form-multi-select-options($options, $option, $is-focused-selector);

  #{$option} {
    @include form-multi-checkbox-option($is-checked-selector, $option-whitespace);
  }
}

@mixin form-multi-checkbox(
  $control: '.control',
  $options-selector: '.options-selector',
  $options: '.options',
  $option: '.option',
  $option-whitespace: nowrap,
  $is-open-selector: '.is-open',
  $has-items-selector: '.has-value',
  $is-focused-selector: '.is-focused',
  $is-checked-selector: '.is-checked',
  $actions-selector: '.actions',
  $actions: (
    remove: delete alert
  )
) {
  position: relative;

  #{$control} {
    @include form-input;
    @include form-multi-checkbox-icon(chevron-thin-down);

    background-color: $form-input-background-color;
    display: block;
  }

  &#{$is-open-selector} > #{$control},
  #{$is-open-selector}#{$control} {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border-color: $form-input-border-color-focused;
  }

  &#{$is-open-selector} > #{$options-selector},
  #{$is-open-selector} + #{$options-selector} {
    display: block;
  }

  &#{$is-focused-selector} > #{$control},
  &#{$is-focused-selector} > #{$options-selector},
  #{$is-focused-selector}#{$control},
  #{$is-focused-selector} + #{$options-selector} {
    border-color: $form-input-border-color-focused;
  }

  &#{$is-open-selector} > #{$control} {
    @include form-multi-checkbox-icon(chevron-thin-up);
  }

  #{$options-selector} {
    @include form-multi-checkbox-options(
      $options: $options,
      $option: $option,
      $option-whitespace: $option-whitespace,
      $is-focused-selector: $is-focused-selector,
      $is-checked-selector: $is-checked-selector
    );
  }

  @if $actions-selector {
    &:hover,
    &#{$is-open-selector} {
      #{$actions-selector} {
        opacity: 1;
      }
    }

    #{$actions-selector} {
      height: $form-input-height;
      margin-right: $form-multi-select-icon-size;
      opacity: .2;
      position: absolute;
      right: $form-multi-select-icon-size;
      text-align: right;
      text-shadow: none;
      top: 0;

      &,
      > * {
        color: $form-multi-select-icon-color;
        line-height: $form-input-height !important;
      }

      @each $action, $icon in $actions {
        .#{$action} {
          @include icon(nth($icon, 1), $set: paint);

          &::before {
            margin-right: 0;
          }

          &:hover {
            color: color(nth($icon, 2));
          }
        }
      }
    }
  } @else {
    &#{$has-items-selector} > #{$control} {
      @include form-multi-checkbox-icon(check);
    }
  }
}

@mixin form-textarea() {
  @include form-input-shared-properties;

  font-size: font(size, base);
  line-height: font(line-height);
  min-height: $form-input-height * 3;
  padding: $form-input-half-padding;
}

@mixin form-submission-action($height: false) {
  float: left;

  &:not(:first-child) {
    margin-left: $column-gutter / 2;
  }

  #{$form-submission-action-confirmation-selector} {
    backface-visibility: hidden;
    background-color: color(alert);
    bottom: 0;
    color: color(white);
    left: 0;
    padding: $column-gutter !important;
    position: absolute;
    right: 0;
    text-align: right;
    top: 0;
    transform: rotateX(180deg) rotateY(0deg);
    transform-style: preserve-3d;
    transition: transform .250s ease-in-out;
    z-index: z(popover);

    &.warning {
      background-color: color(warning);
    }

    &.info {
      background-color: color(link);
    }

    &.success {
      background-color: color(success);
    }

    span {
      float: left;
      line-height: 40px;
      padding: 0;
    }

    @if $height {
      span {
        line-height: $height !important;
      }
    }

    button {
      @extend %button-ghost;
    }

    a {
      color: color(white);
    }
  }

  &#{$form-submission-action-active} {
    #{$form-submission-action-confirmation-selector} {
      transform: rotateX(0deg);
    }
  }
}

@mixin form-submission($with-border: $form-with-border, $standalone: false, $height: false) {
  @extend %grid-column-12;

  position: relative;
  transition: background-color animation(transition, duration) / 2 linear;

  @if $standalone == false {
    background-color: color(white);
    border-top: 1px solid color(border);

    @if $with-border {
      border-bottom-left-radius: border(radius);
      border-bottom-right-radius: border(radius);
      padding: $column-gutter !important;
    } @else {
      padding: $column-gutter $column-gutter / 2 !important;
    }
  } @else {
    border: 0 !important;
    border-radius: 0 !important;
    padding: 0 $column-gutter / 2 !important;
  }

  @if $height {
    height: $height;
    line-height: $height;
    padding-bottom: 0 !important;
    padding-top: 0 !important;
  }

  #{$form-submission-action-selector} {
    @include form-submission-action($height: $height);
  }

  button {
    @extend %button-base;

    transition: background-color animation(transition, duration) / 2 linear;
  }

  a {
    color: color(text, small);
    display: inline-block;

    @if $height {
      padding: 0 $column-gutter;
    } @else {
      padding: $column-gutter / 3 $column-gutter;
    }

    &:hover {
      color: color(text);
    }
  }
}

@mixin form-select-arrow() {
  &::before,
  &::after {
    border: $form-select-arrow-size dashed;
    border-color: color(text, small) transparent;
    content: '';
    height: 0;
    pointer-events: none;
    position: absolute;
    right: $form-input-half-padding;
    top: 6px;
    width: 0;
  }

  &::before {
    border-bottom-style: solid;
    border-top: 0;
  }

  &::after {
    border-bottom: 0;
    border-top-style: solid;
    margin-top: $form-select-arrow-size * 2;
  }
}

@mixin form-input-disabled() {
  background-color: $form-input-disabled-bg;
  cursor: not-allowed;
  color: $form-input-disabled-text-color;
}

@mixin form-input-shared-properties() {
  background-image: $form-input-background;
  border: 1px solid;
  border-color: $form-input-border-color darken($form-input-border-color, 5%);
  border-radius: border(radius);
  box-shadow: 0 1px 1px $form-input-shadow-color;
  color: $form-input-text-color;
  height: auto;
  text-shadow: 0 1px color(white);

  &:hover {
    box-shadow: 0 1px 2px rgba(color(black), .1);
  }

  &:focus,
  > *:focus, {
    background-color: color(white);
    background-image: none;
    outline: none;
  }

  &:disabled,
  &[disabled],
  &[readonly] {
    @include form-input-disabled;
  }
}

@mixin form-item-small() {
  @extend %grid-column-medium-6;
  @extend %grid-column-large-4;
}

@mixin form-item-medium() {
  @extend %grid-column-medium-6;
  @extend %grid-column-large-6;
}

@mixin form-item-large() {
  @extend %grid-column-medium-12;
  @extend %grid-column-large-12;
}

@include exports('paint-form') {
  @if $include-html-paint-form {
    .form form {
      @include form;

      .form-fieldset {
        @include form-fieldset;

        .form-field {
          @include form-field;

          label {
            @include form-label;
          }

          input:not([type='checkbox']) {
            @include form-input;
          }

          &.form-checkbox,
          &.form-radio {
            @include form-checkbox;
          }

          &.form-select {
            @include form-select;
          }

          &.form-multi-select .content {
            @include form-multi-select(
              $control: '.control',
              $input-selector: '.input'
            );
          }

          &.form-multi-checkbox .content {
            @include form-multi-checkbox(
              $control: '.control'
            );
          }

          textarea {
            @include form-textarea;
          }
        }
      }
    }

    .form-submission {
      @include form-submission;
    }
  }
}
